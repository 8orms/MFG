services:
  postgis:
    build:
      context: ./postgis
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - gis_network
    volumes:
      - ${POSTGRES_DATA_PATH}:/var/lib/postgresql/data

  elasticsearch:
    image: elasticsearch:7.17.9
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
    ports:
      - "${ELASTICSEARCH_PORT}:9200"
    networks:
      - gis_network
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  geoserver-ecw:
    image: urbanits/geoserver:master
    environment:
      - GEOSERVER_DATA_DIR=/opt/geoserver/data_dir
      - CATALINA_OPTS=-Dorg.geoserver.web.proxy.base=http://localhost/geoserver-ecw
    ports:
      - "${GEOSERVER_ECW_PORT}:8080"
    networks:
      - gis_network
    volumes:
      - ${GEOSERVER_DATA_PATH}/ecw:/opt/geoserver/data_dir
      - ${USER_PROJECTIONS_PATH}:/opt/geoserver/user-projections
      - ${RASTER_STORAGE_PATH}:/opt/geoserver/raster-storage

  geoserver-vector:
    image: kartoza/geoserver:2.25.2
    environment:
      - GEOSERVER_DATA_DIR=/opt/geoserver/data_dir
      - GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}
      - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}
      - CATALINA_OPTS=-Dorg.geoserver.web.proxy.base=http://localhost/geoserver-vector
    ports:
      - "${GEOSERVER_VECTOR_PORT}:8080"
    networks:
      - gis_network
    volumes:
      - ${GEOSERVER_DATA_PATH}/vector:/opt/geoserver/data_dir

  geonetwork:
    image: geonetwork:4.2.2
    environment:
      - DATA_DIR=/catalogue-data
      - POSTGRES_DB_USERNAME=${POSTGRES_USER}
      - POSTGRES_DB_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB_HOST=postgis
      - POSTGRES_DB_PORT=5432
      - POSTGRES_DB_NAME=${POSTGRES_DB}
      - ES_HOST=elasticsearch
      - ES_PORT=9200
      - ES_PROTOCOL=http
      - GN_CONFIG_GEOSERVER_VECTOR_URL=http://geoserver-vector:8080/geoserver
      - GN_CONFIG_GEOSERVER_ECW_URL=http://geoserver-ecw:8080/geoserver
    ports:
      - "${GEONETWORK_PORT}:8080"
    networks:
      - gis_network
    volumes:
      - geonetwork-data:/catalogue-data
    depends_on:
      - postgis
      - elasticsearch
      - geoserver-vector
      - geoserver-ecw

  nginx:
    build:
      context: ./nginx
    ports:
      - "${NGINX_HTTP_PORT}:80"
      - "${NGINX_HTTPS_PORT}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - geoserver-vector
      - geoserver-ecw
      - geonetwork
    networks:
      - gis_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  gis_network:
    driver: bridge

volumes:
  postgis-data:
  geonetwork-data:
  elasticsearch-data: